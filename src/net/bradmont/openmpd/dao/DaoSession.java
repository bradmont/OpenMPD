package net.bradmont.openmpd.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import net.bradmont.openmpd.dao.TntService;
import net.bradmont.openmpd.dao.ServiceAccount;
import net.bradmont.openmpd.dao.Contact;
import net.bradmont.openmpd.dao.Person;
import net.bradmont.openmpd.dao.ContactDetail;
import net.bradmont.openmpd.dao.ContactInteraction;
import net.bradmont.openmpd.dao.ContactStatus;
import net.bradmont.openmpd.dao.Gift;
import net.bradmont.openmpd.dao.Notification;
import net.bradmont.openmpd.dao.QuickMessage;
import net.bradmont.openmpd.dao.GivingSummaryCache;
import net.bradmont.openmpd.dao.Log;
import net.bradmont.openmpd.dao.ContactSublist;

import net.bradmont.openmpd.dao.TntServiceDao;
import net.bradmont.openmpd.dao.ServiceAccountDao;
import net.bradmont.openmpd.dao.ContactDao;
import net.bradmont.openmpd.dao.PersonDao;
import net.bradmont.openmpd.dao.ContactDetailDao;
import net.bradmont.openmpd.dao.ContactInteractionDao;
import net.bradmont.openmpd.dao.ContactStatusDao;
import net.bradmont.openmpd.dao.GiftDao;
import net.bradmont.openmpd.dao.NotificationDao;
import net.bradmont.openmpd.dao.QuickMessageDao;
import net.bradmont.openmpd.dao.GivingSummaryCacheDao;
import net.bradmont.openmpd.dao.LogDao;
import net.bradmont.openmpd.dao.ContactSublistDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig tntServiceDaoConfig;
    private final DaoConfig serviceAccountDaoConfig;
    private final DaoConfig contactDaoConfig;
    private final DaoConfig personDaoConfig;
    private final DaoConfig contactDetailDaoConfig;
    private final DaoConfig contactInteractionDaoConfig;
    private final DaoConfig contactStatusDaoConfig;
    private final DaoConfig giftDaoConfig;
    private final DaoConfig notificationDaoConfig;
    private final DaoConfig quickMessageDaoConfig;
    private final DaoConfig givingSummaryCacheDaoConfig;
    private final DaoConfig logDaoConfig;
    private final DaoConfig contactSublistDaoConfig;

    private final TntServiceDao tntServiceDao;
    private final ServiceAccountDao serviceAccountDao;
    private final ContactDao contactDao;
    private final PersonDao personDao;
    private final ContactDetailDao contactDetailDao;
    private final ContactInteractionDao contactInteractionDao;
    private final ContactStatusDao contactStatusDao;
    private final GiftDao giftDao;
    private final NotificationDao notificationDao;
    private final QuickMessageDao quickMessageDao;
    private final GivingSummaryCacheDao givingSummaryCacheDao;
    private final LogDao logDao;
    private final ContactSublistDao contactSublistDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        tntServiceDaoConfig = daoConfigMap.get(TntServiceDao.class).clone();
        tntServiceDaoConfig.initIdentityScope(type);

        serviceAccountDaoConfig = daoConfigMap.get(ServiceAccountDao.class).clone();
        serviceAccountDaoConfig.initIdentityScope(type);

        contactDaoConfig = daoConfigMap.get(ContactDao.class).clone();
        contactDaoConfig.initIdentityScope(type);

        personDaoConfig = daoConfigMap.get(PersonDao.class).clone();
        personDaoConfig.initIdentityScope(type);

        contactDetailDaoConfig = daoConfigMap.get(ContactDetailDao.class).clone();
        contactDetailDaoConfig.initIdentityScope(type);

        contactInteractionDaoConfig = daoConfigMap.get(ContactInteractionDao.class).clone();
        contactInteractionDaoConfig.initIdentityScope(type);

        contactStatusDaoConfig = daoConfigMap.get(ContactStatusDao.class).clone();
        contactStatusDaoConfig.initIdentityScope(type);

        giftDaoConfig = daoConfigMap.get(GiftDao.class).clone();
        giftDaoConfig.initIdentityScope(type);

        notificationDaoConfig = daoConfigMap.get(NotificationDao.class).clone();
        notificationDaoConfig.initIdentityScope(type);

        quickMessageDaoConfig = daoConfigMap.get(QuickMessageDao.class).clone();
        quickMessageDaoConfig.initIdentityScope(type);

        givingSummaryCacheDaoConfig = daoConfigMap.get(GivingSummaryCacheDao.class).clone();
        givingSummaryCacheDaoConfig.initIdentityScope(type);

        logDaoConfig = daoConfigMap.get(LogDao.class).clone();
        logDaoConfig.initIdentityScope(type);

        contactSublistDaoConfig = daoConfigMap.get(ContactSublistDao.class).clone();
        contactSublistDaoConfig.initIdentityScope(type);

        tntServiceDao = new TntServiceDao(tntServiceDaoConfig, this);
        serviceAccountDao = new ServiceAccountDao(serviceAccountDaoConfig, this);
        contactDao = new ContactDao(contactDaoConfig, this);
        personDao = new PersonDao(personDaoConfig, this);
        contactDetailDao = new ContactDetailDao(contactDetailDaoConfig, this);
        contactInteractionDao = new ContactInteractionDao(contactInteractionDaoConfig, this);
        contactStatusDao = new ContactStatusDao(contactStatusDaoConfig, this);
        giftDao = new GiftDao(giftDaoConfig, this);
        notificationDao = new NotificationDao(notificationDaoConfig, this);
        quickMessageDao = new QuickMessageDao(quickMessageDaoConfig, this);
        givingSummaryCacheDao = new GivingSummaryCacheDao(givingSummaryCacheDaoConfig, this);
        logDao = new LogDao(logDaoConfig, this);
        contactSublistDao = new ContactSublistDao(contactSublistDaoConfig, this);

        registerDao(TntService.class, tntServiceDao);
        registerDao(ServiceAccount.class, serviceAccountDao);
        registerDao(Contact.class, contactDao);
        registerDao(Person.class, personDao);
        registerDao(ContactDetail.class, contactDetailDao);
        registerDao(ContactInteraction.class, contactInteractionDao);
        registerDao(ContactStatus.class, contactStatusDao);
        registerDao(Gift.class, giftDao);
        registerDao(Notification.class, notificationDao);
        registerDao(QuickMessage.class, quickMessageDao);
        registerDao(GivingSummaryCache.class, givingSummaryCacheDao);
        registerDao(Log.class, logDao);
        registerDao(ContactSublist.class, contactSublistDao);
    }
    
    public void clear() {
        tntServiceDaoConfig.getIdentityScope().clear();
        serviceAccountDaoConfig.getIdentityScope().clear();
        contactDaoConfig.getIdentityScope().clear();
        personDaoConfig.getIdentityScope().clear();
        contactDetailDaoConfig.getIdentityScope().clear();
        contactInteractionDaoConfig.getIdentityScope().clear();
        contactStatusDaoConfig.getIdentityScope().clear();
        giftDaoConfig.getIdentityScope().clear();
        notificationDaoConfig.getIdentityScope().clear();
        quickMessageDaoConfig.getIdentityScope().clear();
        givingSummaryCacheDaoConfig.getIdentityScope().clear();
        logDaoConfig.getIdentityScope().clear();
        contactSublistDaoConfig.getIdentityScope().clear();
    }

    public TntServiceDao getTntServiceDao() {
        return tntServiceDao;
    }

    public ServiceAccountDao getServiceAccountDao() {
        return serviceAccountDao;
    }

    public ContactDao getContactDao() {
        return contactDao;
    }

    public PersonDao getPersonDao() {
        return personDao;
    }

    public ContactDetailDao getContactDetailDao() {
        return contactDetailDao;
    }

    public ContactInteractionDao getContactInteractionDao() {
        return contactInteractionDao;
    }

    public ContactStatusDao getContactStatusDao() {
        return contactStatusDao;
    }

    public GiftDao getGiftDao() {
        return giftDao;
    }

    public NotificationDao getNotificationDao() {
        return notificationDao;
    }

    public QuickMessageDao getQuickMessageDao() {
        return quickMessageDao;
    }

    public GivingSummaryCacheDao getGivingSummaryCacheDao() {
        return givingSummaryCacheDao;
    }

    public LogDao getLogDao() {
        return logDao;
    }

    public ContactSublistDao getContactSublistDao() {
        return contactSublistDao;
    }

}
